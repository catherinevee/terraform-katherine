# Security Configuration for Terraform-Katherine Workflows
# This file defines security policies, compliance rules, and validation checks

security_policies:
  # Script Injection Protection
  script_injection:
    enabled: true
    rules:
      - no_direct_github_event_usage: true
      - require_environment_variables: true
      - no_dynamic_command_execution: true
      - pr_code_checkout_restricted: true

  # Token and Permissions Security
  permissions:
    enabled: true
    rules:
      - explicit_permissions_required: true
      - minimal_github_token_access: true
      - job_specific_permissions: true
      - oidc_authentication_required: true

  # Third-Party Action Security
  third_party_actions:
    enabled: true
    rules:
      - pinned_versions_required: true
      - verified_publishers_only: true
      - no_main_master_branches: true
      - security_review_required: true

  # Secrets Management
  secrets_management:
    enabled: true
    rules:
      - no_hardcoded_secrets: true
      - environment_scoped_secrets: true
      - no_secret_logging: true
      - environment_protection_rules: true

  # Dangerous Trigger Events
  trigger_events:
    enabled: true
    rules:
      - no_pull_request_target: true
      - manual_deployment_only: true
      - branch_protection_required: true
      - input_validation_required: true

compliance_standards:
  # SOC2 Type II Controls
  soc2_type_ii:
    enabled: true
    controls:
      cc1_control_environment:
        description: "Control Environment"
        required_controls:
          - iam_role
          - security_group
          - kms_key
        validation_script: "check_soc2_cc1.sh"
        
      cc2_communication_information:
        description: "Communication and Information"
        required_controls:
          - cloudwatch
          - flow_log
          - audit_log
        validation_script: "check_soc2_cc2.sh"
        
      cc3_risk_assessment:
        description: "Risk Assessment"
        required_controls:
          - encryption
          - backup
          - monitoring
          - alerting
        validation_script: "check_soc2_cc3.sh"
        
      cc4_monitoring_activities:
        description: "Monitoring Activities"
        required_controls:
          - cloudwatch_alarm
          - sns_topic
          - lambda_function
        validation_script: "check_soc2_cc4.sh"
        
      cc5_control_activities:
        description: "Control Activities"
        required_controls:
          - auto_scaling
          - backup_automation
          - patch_management
        validation_script: "check_soc2_cc5.sh"

  # PCI-DSS Level 1 Requirements
  pci_dss_level_1:
    enabled: true
    requirements:
      req1_firewall_configuration:
        description: "Firewall Configuration"
        required_controls:
          - vpc
          - security_group
          - network_acl
        validation_script: "check_pci_req1.sh"
        
      req2_secure_configuration:
        description: "Secure Configuration"
        required_controls:
          - encryption
          - ssl_certificate
          - secure_protocols
        validation_script: "check_pci_req2.sh"
        
      req3_cardholder_data_protection:
        description: "Cardholder Data Protection"
        required_controls:
          - encryption_at_rest
          - encryption_in_transit
          - key_management
        validation_script: "check_pci_req3.sh"
        
      req4_secure_transmission:
        description: "Secure Transmission"
        required_controls:
          - tls
          - https
          - vpn
        validation_script: "check_pci_req4.sh"
        
      req5_vulnerability_management:
        description: "Vulnerability Management"
        required_controls:
          - patch_management
          - security_updates
          - vulnerability_scanning
        validation_script: "check_pci_req5.sh"
        
      req6_access_control:
        description: "Access Control"
        required_controls:
          - iam_role
          - user_management
          - privileged_access
        validation_script: "check_pci_req6.sh"

security_scanners:
  # Infrastructure Security Scanners
  tfsec:
    enabled: true
    version: "v1.28.4"
    output_format: "sarif"
    severity_threshold: "HIGH"
    excluded_rules:
      - "AWS018"  # S3 bucket logging not enabled
      - "AWS017"  # S3 bucket versioning not enabled
    
  checkov:
    enabled: true
    version: "2.3.178"
    framework: "terraform"
    output_format: "sarif"
    skip_checks:
      - "CKV_AWS_130"  # VPC Flow Logs not enabled
      - "CKV_AWS_126"  # VPC default security group allows all traffic
    
  trivy:
    enabled: true
    version: "0.48.4"
    scan_type: "fs"
    severity: "CRITICAL,HIGH"
    output_format: "sarif"
    
  owasp_dependency_check:
    enabled: true
    version: "8.4.0"
    fail_on_cvss: 7
    enable_retired: true
    output_format: "SARIF"

performance_optimizations:
  # Caching Strategy
  caching:
    enabled: true
    cache_backend: "actions/cache@v4"
    cache_keys:
      - "terraform-${{ hashFiles('**/*.tf') }}"
      - "terragrunt-${{ hashFiles('**/*.hcl') }}"
      - "dependencies-${{ hashFiles('**/go.mod', '**/package.json') }}"
    retention_days: 7
    
  # Job Parallelization
  parallelization:
    enabled: true
    max_parallel_jobs: 4
    concurrency_groups:
      - "security-scan"
      - "validation"
      - "deployment"
      - "compliance"
      
  # Artifact Management
  artifacts:
    retention_days: 90
    compression_enabled: true
    max_size_mb: 1000

environment_configuration:
  # Development Environment
  dev:
    protection_rules:
      required_reviewers: 1
      wait_timer_minutes: 0
      deployment_branches: ["develop", "feature/*"]
    secrets:
      - AWS_ROLE_ARN
      - INFRACOST_API_KEY
      
  # Staging Environment
  staging:
    protection_rules:
      required_reviewers: 1
      wait_timer_minutes: 2
      deployment_branches: ["main", "develop"]
    secrets:
      - AWS_ROLE_ARN
      - INFRACOST_API_KEY
      - SLACK_WEBHOOK_URL
      
  # Production Environment
  prod:
    protection_rules:
      required_reviewers: 2
      wait_timer_minutes: 5
      deployment_branches: ["main"]
      required_status_checks: ["security-scan", "validate"]
    secrets:
      - AWS_ROLE_ARN
      - INFRACOST_API_KEY
      - SLACK_WEBHOOK_URL
      - PAGERDUTY_API_KEY

monitoring_and_observability:
  # Structured Logging
  logging:
    enabled: true
    log_levels:
      - "::notice::"
      - "::warning::"
      - "::error::"
    include_timestamps: true
    include_context: true
    
  # Notifications
  notifications:
    slack:
      enabled: true
      webhook_url_secret: "SLACK_WEBHOOK_URL"
      channels:
        - "#devops-alerts"
        - "#security-alerts"
        - "#compliance-reports"
    email:
      enabled: false
      smtp_server: ""
      recipients: []
      
  # Metrics Collection
  metrics:
    deployment_frequency: true
    lead_time_changes: true
    mean_time_recovery: true
    change_failure_rate: true

audit_and_compliance:
  # Audit Trail
  audit_trail:
    enabled: true
    retention_days: 2555  # 7 years for compliance
    log_events:
      - "workflow_start"
      - "workflow_complete"
      - "deployment_approval"
      - "security_scan_results"
      - "compliance_check_results"
      
  # Compliance Reporting
  reporting:
    weekly_reports: true
    monthly_summaries: true
    quarterly_audits: true
    annual_assessments: true
    report_formats:
      - "markdown"
      - "json"
      - "sarif"
      
  # Evidence Collection
  evidence:
    enabled: true
    collect_artifacts: true
    store_reports: true
    backup_audit_logs: true

maintenance_schedule:
  # Regular Maintenance Tasks
  monthly:
    - "Update action versions"
    - "Review security policies"
    - "Update compliance controls"
    - "Performance optimization review"
    
  quarterly:
    - "Rotate secrets and API keys"
    - "Review access permissions"
    - "Update security scanners"
    - "Compliance policy review"
    
  annually:
    - "Full security audit"
    - "Compliance assessment"
    - "Infrastructure review"
    - "Documentation update"

contact_information:
  security_team: "security@company.com"
  compliance_team: "compliance@company.com"
  devops_team: "devops@company.com"
  emergency_contact: "+1-555-0123"

references:
  - "GitHub Actions Security Best Practices: https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions"
  - "SOC2 Trust Service Criteria: https://www.aicpa.org/interestareas/frc/assuranceadvisoryservices/aicpasoc2report.html"
  - "PCI-DSS Requirements: https://www.pcisecuritystandards.org/document_library"
  - "AWS OIDC for GitHub Actions: https://docs.aws.amazon.com/iam/latest/UserGuide/id_roles_providers_create_oidc.html"
  - "Terraform Security Best Practices: https://www.terraform.io/docs/cloud/guides/recommended-practices/security.html" 